{"version":3,"file":"cubejs-client-core.js","sources":["../src/utils.js","../src/ResultSet.js","../src/SqlQuery.js","../src/Meta.js","../src/ProgressResult.js","../src/HttpTransport.js","../src/RequestError.js","../src/index.js"],"sourcesContent":["import { indexBy, prop, clone, equals, fromPairs, toPairs } from 'ramda';\n\nexport const DEFAULT_GRANULARITY = 'day';\n\nexport const GRANULARITIES = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport function removeEmptyQueryFields(_query) {\n  const query = _query || {};\n  \n  return fromPairs(\n    toPairs(query)\n      .map(([key, value]) => {\n        if (\n          ['measures', 'dimensions', 'segments', 'timeDimensions', 'filters'].includes(key)\n        ) {\n          if (Array.isArray(value) && value.length === 0) {\n            return null;\n          }\n        }\n        \n        if (key === 'order' && value) {\n          if (Array.isArray(value) && !value.length) {\n            return null;\n          } else if (!Object.keys(value).length) {\n            return null;\n          }\n        }\n\n        return [key, value];\n      })\n      .filter(Boolean)\n  );\n}\n\nexport function validateQuery(_query) {\n  const query = _query || {};\n  \n  return removeEmptyQueryFields({\n    ...query,\n    filters: (query.filters || []).filter((f) => f.operator),\n    timeDimensions: (query.timeDimensions || []).filter(\n      (td) => !(!td.dateRange && !td.granularity)\n    ),\n  });\n}\n\nexport function areQueriesEqual(query1 = {}, query2 = {}) {\n  return (\n    equals(\n      Object.entries((query1 && query1.order) || {}),\n      Object.entries((query2 && query2.order) || {})\n    ) && equals(query1, query2)\n  );\n}\n\nexport function defaultOrder(query) {\n  const granularity = (query.timeDimensions || []).find((d) => d.granularity);\n\n  if (granularity) {\n    return {\n      [granularity.dimension]: 'asc',\n    };\n  } else if (\n    (query.measures || []).length > 0 &&\n    (query.dimensions || []).length > 0\n  ) {\n    return {\n      [query.measures[0]]: 'desc',\n    };\n  } else if ((query.dimensions || []).length > 0) {\n    return {\n      [query.dimensions[0]]: 'asc',\n    };\n  }\n\n  return {};\n}\n\nexport function defaultHeuristics(newState, oldQuery = {}, options) {\n  const { query, ...props } = clone(newState);\n  const { meta, sessionGranularity } = options;\n  const granularity = sessionGranularity || DEFAULT_GRANULARITY;\n\n  let state = {\n    query,\n    ...props,\n  };\n\n  let newQuery = null;\n  if (!areQueriesEqual(query, oldQuery)) {\n    newQuery = query;\n  }\n\n  if (Array.isArray(newQuery) || Array.isArray(oldQuery)) {\n    return newState;\n  }\n\n  if (newQuery) {\n    if (\n      (oldQuery.timeDimensions || []).length === 1 &&\n      (newQuery.timeDimensions || []).length === 1 &&\n      newQuery.timeDimensions[0].granularity &&\n      oldQuery.timeDimensions[0].granularity !==\n        newQuery.timeDimensions[0].granularity\n    ) {\n      state = {\n        ...state,\n        sessionGranularity: newQuery.timeDimensions[0].granularity,\n      };\n    }\n\n    if (\n      ((oldQuery.measures || []).length === 0 &&\n        (newQuery.measures || []).length > 0) ||\n      ((oldQuery.measures || []).length === 1 &&\n        (newQuery.measures || []).length === 1 &&\n        oldQuery.measures[0] !== newQuery.measures[0])\n    ) {\n      const [td] = newQuery.timeDimensions || [];\n      const defaultTimeDimension = meta.defaultTimeDimensionNameFor(\n        newQuery.measures[0]\n      );\n      newQuery = {\n        ...newQuery,\n        timeDimensions: defaultTimeDimension\n          ? [\n            {\n              dimension: defaultTimeDimension,\n              granularity: (td && td.granularity) || granularity,\n              dateRange: td && td.dateRange,\n            },\n          ]\n          : [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: defaultTimeDimension ? 'line' : 'number',\n      };\n    }\n\n    if (\n      (oldQuery.dimensions || []).length === 0 &&\n      (newQuery.dimensions || []).length > 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: undefined,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: 'table',\n      };\n    }\n\n    if (\n      (oldQuery.dimensions || []).length > 0 &&\n      (newQuery.dimensions || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: td.granularity || granularity,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: (newQuery.timeDimensions || []).length ? 'line' : 'number',\n      };\n    }\n\n    if (\n      ((oldQuery.dimensions || []).length > 0 ||\n        (oldQuery.measures || []).length > 0) &&\n      (newQuery.dimensions || []).length === 0 &&\n      (newQuery.measures || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: [],\n        filters: [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        sessionGranularity: null,\n      };\n    }\n    return state;\n  }\n\n  if (state.chartType) {\n    const newChartType = state.chartType;\n    if (\n      (newChartType === 'line' || newChartType === 'area') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      !oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity }],\n        },\n      };\n    }\n\n    if (\n      (newChartType === 'pie' ||\n        newChartType === 'table' ||\n        newChartType === 'number') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity: undefined }],\n        },\n      };\n    }\n  }\n\n  return state;\n}\n\nexport function isQueryPresent(query) {\n  if (!query) {\n    return false;\n  }\n\n  return (Array.isArray(query) ? query : [query]).every(\n    (q) => (q.measures && q.measures.length) ||\n      (q.dimensions && q.dimensions.length) ||\n      (q.timeDimensions && q.timeDimensions.length)\n  );\n}\n\nexport function movePivotItem(\n  pivotConfig,\n  sourceIndex,\n  destinationIndex,\n  sourceAxis,\n  destinationAxis\n) {\n  const nextPivotConfig = {\n    ...pivotConfig,\n    x: [...pivotConfig.x],\n    y: [...pivotConfig.y],\n  };\n  const id = pivotConfig[sourceAxis][sourceIndex];\n  const lastIndex = nextPivotConfig[destinationAxis].length - 1;\n\n  if (id === 'measures') {\n    destinationIndex = lastIndex + 1;\n  } else if (\n    sourceAxis === destinationAxis &&\n    destinationIndex >= lastIndex &&\n    nextPivotConfig[destinationAxis][lastIndex] === 'measures'\n  ) {\n    destinationIndex = lastIndex - 1;\n  } else if (\n    sourceAxis !== destinationAxis &&\n    destinationIndex > lastIndex &&\n    nextPivotConfig[destinationAxis][lastIndex] === 'measures'\n  ) {\n    destinationIndex = lastIndex;\n  }\n\n  nextPivotConfig[sourceAxis].splice(sourceIndex, 1);\n  nextPivotConfig[destinationAxis].splice(destinationIndex, 0, id);\n\n  return nextPivotConfig;\n}\n\nexport function moveItemInArray(list, sourceIndex, destinationIndex) {\n  const result = [...list];\n  const [removed] = result.splice(sourceIndex, 1);\n  result.splice(destinationIndex, 0, removed);\n\n  return result;\n}\n\nexport function flattenFilters(filters = []) {\n  return filters.reduce((memo, filter) => {\n    if (filter.or || filter.and) {\n      return [...memo, ...flattenFilters(filter.or || filter.and)];\n    }\n\n    return [...memo, filter];\n  }, []);\n}\n\nexport function getQueryMembers(query = {}) {\n  const keys = ['measures', 'dimensions', 'segments'];\n  const members = new Set();\n\n  keys.forEach((key) => (query[key] || []).forEach((member) => members.add(member)));\n  (query.timeDimensions || []).forEach((td) => members.add(td.dimension));\n\n  flattenFilters(query.filters).forEach((filter) => members.add(filter.dimension || filter.member));\n\n  return [...members];\n}\n\nexport function getOrderMembersFromOrder(orderMembers, order) {\n  const ids = new Set();\n  const indexedOrderMembers = indexBy(prop('id'), orderMembers);\n  const entries = Array.isArray(order) ? order : Object.entries(order || {});\n  const nextOrderMembers = [];\n\n  entries.forEach(([memberId, currentOrder]) => {\n    if (currentOrder !== 'none' && indexedOrderMembers[memberId]) {\n      ids.add(memberId);\n      nextOrderMembers.push({\n        ...indexedOrderMembers[memberId],\n        order: currentOrder,\n      });\n    }\n  });\n  orderMembers.forEach((member) => {\n    if (!ids.has(member.id)) {\n      nextOrderMembers.push({\n        ...member,\n        order: member.order || 'none',\n      });\n    }\n  });\n\n  return nextOrderMembers;\n}\n\nexport function aliasSeries(values, index, pivotConfig, duplicateMeasures) {\n  const nonNullValues = values.filter((value) => value != null);\n\n  if (\n    pivotConfig &&\n    pivotConfig.aliasSeries &&\n    pivotConfig.aliasSeries[index]\n  ) {\n    return [pivotConfig.aliasSeries[index], ...nonNullValues];\n  } else if (duplicateMeasures.has(nonNullValues[0])) {\n    return [index, ...nonNullValues];\n  }\n\n  return nonNullValues;\n}\n","import dayjs from 'dayjs';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\n\nimport en from 'dayjs/locale/en';\nimport {\n  groupBy, pipe, fromPairs, uniq, filter, map, dropLast, equals, reduce, minBy, maxBy, clone, mergeDeepLeft,\n  pluck, mergeAll, flatten,\n} from 'ramda';\n\nimport { aliasSeries } from './utils';\n\ndayjs.extend(quarterOfYear);\n\n// When granularity is week, weekStart Value must be 1. However, since the client can change it globally (https://day.js.org/docs/en/i18n/changing-locale)\n// So the function below has been added.\nconst internalDayjs = (...args) => dayjs(...args).locale({ ...en, weekStart: 1 });\n\nexport const TIME_SERIES = {\n  day: (range) => range.by('d').map(d => d.format('YYYY-MM-DDT00:00:00.000')),\n  month: (range) => range.snapTo('month').by('M').map(d => d.format('YYYY-MM-01T00:00:00.000')),\n  year: (range) => range.snapTo('year').by('y').map(d => d.format('YYYY-01-01T00:00:00.000')),\n  hour: (range) => range.by('h').map(d => d.format('YYYY-MM-DDTHH:00:00.000')),\n  minute: (range) => range.by('m').map(d => d.format('YYYY-MM-DDTHH:mm:00.000')),\n  second: (range) => range.by('s').map(d => d.format('YYYY-MM-DDTHH:mm:ss.000')),\n  week: (range) => range.snapTo('week').by('w').map(d => d.startOf('week').format('YYYY-MM-DDT00:00:00.000')),\n  quarter: (range) => range.snapTo('quarter').by('quarter').map(d => d.startOf('quarter').format('YYYY-MM-DDT00:00:00.000')),\n};\n\nconst DateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nconst LocalDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z?$/;\n\nconst groupByToPairs = (keyFn) => {\n  const acc = new Map();\n\n  return (data) => {\n    data.forEach((row) => {\n      const key = keyFn(row);\n\n      if (!acc.has(key)) {\n        acc.set(key, []);\n      }\n\n      acc.get(key).push(row);\n    });\n\n    return Array.from(acc.entries());\n  };\n};\n\nconst unnest = (arr) => {\n  const res = [];\n  arr.forEach((subArr) => {\n    subArr.forEach(element => res.push(element));\n  });\n\n  return res;\n};\n\nexport const dayRange = (from, to) => ({\n  by: (value) => {\n    const results = [];\n\n    let start = internalDayjs(from);\n    const end = internalDayjs(to);\n\n    while (start.isBefore(end) || start.isSame(end)) {\n      results.push(start);\n      start = start.add(1, value);\n    }\n\n    return results;\n  },\n  snapTo: (value) => dayRange(internalDayjs(from).startOf(value), internalDayjs(to).endOf(value)),\n  start: internalDayjs(from),\n  end: internalDayjs(to),\n});\n\nexport const QUERY_TYPE = {\n  REGULAR_QUERY: 'regularQuery',\n  COMPARE_DATE_RANGE_QUERY: 'compareDateRangeQuery',\n  BLENDING_QUERY: 'blendingQuery',\n};\n\nclass ResultSet {\n  static measureFromAxis(axisValues) {\n    return axisValues[axisValues.length - 1];\n  }\n\n  static timeDimensionMember(td) {\n    return `${td.dimension}.${td.granularity}`;\n  }\n\n  static deserialize(data, options = {}) {\n    return new ResultSet(data.loadResponse, options);\n  }\n\n  constructor(loadResponse, options = {}) {\n    this.loadResponse = loadResponse;\n\n    if (this.loadResponse.queryType != null) {\n      this.queryType = loadResponse.queryType;\n      this.loadResponses = loadResponse.results;\n    } else {\n      this.queryType = QUERY_TYPE.REGULAR_QUERY;\n      this.loadResponse.pivotQuery = {\n        ...loadResponse.query,\n        queryType: this.queryType\n      };\n      this.loadResponses = [loadResponse];\n    }\n\n    if (!Object.values(QUERY_TYPE).includes(this.queryType)) {\n      throw new Error('Unknown query type');\n    }\n\n    this.parseDateMeasures = options.parseDateMeasures;\n    this.options = options;\n\n    this.backwardCompatibleData = [];\n  }\n\n  drillDown(drillDownLocator, pivotConfig) {\n    if (this.queryType === QUERY_TYPE.COMPARE_DATE_RANGE_QUERY) {\n      throw new Error('compareDateRange drillDown query is not currently supported');\n    }\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      throw new Error('Data blending drillDown query is not currently supported');\n    }\n\n    const { query } = this.loadResponses[0];\n    const { xValues = [], yValues = [] } = drillDownLocator;\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig);\n\n    const values = [];\n    normalizedPivotConfig.x.forEach((member, currentIndex) => values.push([member, xValues[currentIndex]]));\n    normalizedPivotConfig.y.forEach((member, currentIndex) => values.push([member, yValues[currentIndex]]));\n\n    const { filters: parentFilters = [], segments = [] } = this.query();\n    const { measures } = this.loadResponses[0].annotation;\n    let [, measureName] = values.find(([member]) => member === 'measures') || [];\n\n    if (measureName === undefined) {\n      [measureName] = Object.keys(measures);\n    }\n\n    if (!(measures[measureName] && measures[measureName].drillMembers || []).length) {\n      return null;\n    }\n\n    const filters = [\n      {\n        member: measureName,\n        operator: 'measureFilter',\n      },\n      ...parentFilters\n    ];\n    const timeDimensions = [];\n\n    values.filter(([member]) => member !== 'measures')\n      .forEach(([member, value]) => {\n        const [cubeName, dimension, granularity] = member.split('.');\n\n        if (granularity !== undefined) {\n          const range = dayRange(value, value).snapTo(granularity);\n          const originalTimeDimension = query.timeDimensions.find((td) => td.dimension);\n          \n          let dateRange = [\n            range.start,\n            range.end\n          ];\n          \n          if (originalTimeDimension?.dateRange) {\n            const [originalStart, originalEnd] = originalTimeDimension.dateRange;\n            \n            dateRange = [\n              dayjs(originalStart) > range.start ? dayjs(originalStart) : range.start,\n              dayjs(originalEnd) < range.end ? dayjs(originalEnd) : range.end,\n            ];\n          }\n\n          timeDimensions.push({\n            dimension: [cubeName, dimension].join('.'),\n            dateRange: dateRange.map((dt) => dt.format('YYYY-MM-DDTHH:mm:ss.SSS')),\n          });\n        } else if (value == null) {\n          filters.push({\n            member,\n            operator: 'notSet',\n          });\n        } else {\n          filters.push({\n            member,\n            operator: 'equals',\n            values: [value.toString()],\n          });\n        }\n      });\n    \n    if (\n      timeDimensions.length === 0 &&\n      query.timeDimensions.length > 0 &&\n      query.timeDimensions[0].granularity == null\n    ) {\n      timeDimensions.push(query.timeDimensions[0]);\n    }\n\n    return {\n      ...measures[measureName].drillMembersGrouped,\n      filters,\n      ...(segments.length > 0 ? { segments } : {}),\n      timeDimensions,\n      segments,\n      timezone: query.timezone\n    };\n  }\n\n  series(pivotConfig) {\n    return this.seriesNames(pivotConfig).map(({ title, shortTitle, key }) => ({\n      title,\n      shortTitle,\n      key,\n      series: this.chartPivot(pivotConfig).map(({ x, ...obj }) => ({ value: obj[key], x }))\n    }));\n  }\n\n  axisValues(axis, resultIndex = 0) {\n    const { query } = this.loadResponses[resultIndex];\n\n    return row => {\n      const value = (measure) => axis.filter(d => d !== 'measures')\n        .map(d => (row[d] != null ? row[d] : null)).concat(measure ? [measure] : []);\n\n      if (axis.find(d => d === 'measures') && (query.measures || []).length) {\n        return query.measures.map(value);\n      }\n\n      return [value()];\n    };\n  }\n\n  axisValuesString(axisValues, delimiter) {\n    const formatValue = (v) => {\n      if (v == null) {\n        return '∅';\n      } else if (v === '') {\n        return '[Empty string]';\n      } else {\n        return v;\n      }\n    };\n    return axisValues.map(formatValue).join(delimiter || ', ');\n  }\n\n  static getNormalizedPivotConfig(query = {}, pivotConfig = null) {\n    const defaultPivotConfig = {\n      x: [],\n      y: [],\n      fillMissingDates: true,\n      joinDateRange: false\n    };\n\n    const {\n      measures = [],\n      dimensions = []\n    } = query;\n\n    const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n\n    pivotConfig = pivotConfig || (timeDimensions.length ? {\n      x: timeDimensions.map(td => ResultSet.timeDimensionMember(td)),\n      y: dimensions\n    } : {\n      x: dimensions,\n      y: []\n    });\n\n    pivotConfig = mergeDeepLeft(pivotConfig, defaultPivotConfig);\n\n    const substituteTimeDimensionMembers = axis => axis.map(\n      subDim => (\n        (\n          timeDimensions.find(td => td.dimension === subDim) &&\n          !dimensions.find(d => d === subDim)\n        ) ?\n          ResultSet.timeDimensionMember(query.timeDimensions.find(td => td.dimension === subDim)) :\n          subDim\n      )\n    );\n\n    pivotConfig.x = substituteTimeDimensionMembers(pivotConfig.x);\n    pivotConfig.y = substituteTimeDimensionMembers(pivotConfig.y);\n\n    const allIncludedDimensions = pivotConfig.x.concat(pivotConfig.y);\n    const allDimensions = timeDimensions.map(td => ResultSet.timeDimensionMember(td)).concat(dimensions);\n\n    const dimensionFilter = (key) => allDimensions.includes(key) || key === 'measures';\n\n    pivotConfig.x = pivotConfig.x.concat(\n      allDimensions.filter(d => !allIncludedDimensions.includes(d) && d !== 'compareDateRange')\n    )\n      .filter(dimensionFilter);\n    pivotConfig.y = pivotConfig.y.filter(dimensionFilter);\n\n    if (!pivotConfig.x.concat(pivotConfig.y).find(d => d === 'measures')) {\n      pivotConfig.y.push('measures');\n    }\n\n    if (dimensions.includes('compareDateRange') && !pivotConfig.y.concat(pivotConfig.x).includes('compareDateRange')) {\n      pivotConfig.y.unshift('compareDateRange');\n    }\n\n    if (!measures.length) {\n      pivotConfig.x = pivotConfig.x.filter(d => d !== 'measures');\n      pivotConfig.y = pivotConfig.y.filter(d => d !== 'measures');\n    }\n\n    return pivotConfig;\n  }\n\n  normalizePivotConfig(pivotConfig) {\n    return ResultSet.getNormalizedPivotConfig(this.loadResponse.pivotQuery, pivotConfig);\n  }\n\n  timeSeries(timeDimension, resultIndex) {\n    if (!timeDimension.granularity) {\n      return null;\n    }\n\n    let { dateRange } = timeDimension;\n\n    if (!dateRange) {\n      const member = ResultSet.timeDimensionMember(timeDimension);\n      const dates = pipe(\n        map(row => row[member] && internalDayjs(row[member])),\n        filter(Boolean)\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      dateRange = dates.length && [\n        reduce(minBy(d => d.toDate()), dates[0], dates),\n        reduce(maxBy(d => d.toDate()), dates[0], dates)\n      ] || null;\n    }\n\n    if (!dateRange) {\n      return null;\n    }\n\n    const padToDay = timeDimension.dateRange ?\n      timeDimension.dateRange.find(d => d.match(DateRegex)) :\n      !['hour', 'minute', 'second'].includes(timeDimension.granularity);\n\n    const [start, end] = dateRange;\n    const range = dayRange(start, end);\n\n    if (!TIME_SERIES[timeDimension.granularity]) {\n      throw new Error(`Unsupported time granularity: ${timeDimension.granularity}`);\n    }\n\n    return TIME_SERIES[timeDimension.granularity](\n      padToDay ? range.snapTo('d') : range\n    );\n  }\n\n  pivot(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const { pivotQuery: query } = this.loadResponse;\n\n    const pivotImpl = (resultIndex = 0) => {\n      let groupByXAxis = groupByToPairs(({ xValues }) => this.axisValuesString(xValues));\n\n      const measureValue = (row, measure) => row[measure] || 0;\n\n      if (\n        pivotConfig.fillMissingDates &&\n        pivotConfig.x.length === 1 &&\n        (equals(\n          pivotConfig.x,\n          (query.timeDimensions || [])\n            .filter(td => Boolean(td.granularity))\n            .map(td => ResultSet.timeDimensionMember(td))\n        ))\n      ) {\n        const series = this.loadResponses.map(\n          (loadResponse) => this.timeSeries(loadResponse.query.timeDimensions[0], resultIndex)\n        );\n\n        if (series[0]) {\n          groupByXAxis = (rows) => {\n            const byXValues = groupBy(\n              ({ xValues }) => xValues[0],\n              rows\n            );\n            return series[resultIndex].map(d => [d, byXValues[d] || [{ xValues: [d], row: {} }]]);\n          };\n        }\n      }\n\n      const xGrouped = pipe(\n        map(row => this.axisValues(pivotConfig.x, resultIndex)(row).map(xValues => ({ xValues, row }))),\n        unnest,\n        groupByXAxis\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      const yValuesMap = {};\n      xGrouped.forEach(([, rows]) => {\n        rows.forEach(({ row }) => {\n          this.axisValues(pivotConfig.y, resultIndex)(row).forEach((values) => {\n            if (Object.keys(row).length > 0) {\n              yValuesMap[values.join()] = values;\n            }\n          });\n        });\n      });\n      const allYValues = Object.values(yValuesMap);\n\n      const measureOnX = Boolean(pivotConfig.x.find(d => d === 'measures'));\n\n      return xGrouped.map(([, rows]) => {\n        const { xValues } = rows[0];\n        const yGrouped = {};\n\n        rows.forEach(({ row }) => {\n          const arr = this.axisValues(pivotConfig.y, resultIndex)(row).map(yValues => ({ yValues, row }));\n          arr.forEach((res) => {\n            yGrouped[this.axisValuesString(res.yValues)] = res;\n          });\n        });\n\n        return {\n          xValues,\n          yValuesArray: unnest(allYValues.map(yValues => {\n            const measure = measureOnX ?\n              ResultSet.measureFromAxis(xValues) :\n              ResultSet.measureFromAxis(yValues);\n\n            return [[yValues, measureValue((yGrouped[this.axisValuesString(yValues)] ||\n              ({ row: {} })).row, measure)]];\n          }))\n        };\n      });\n    };\n\n    const pivots = this.loadResponses.length > 1\n      ? this.loadResponses.map((_, index) => pivotImpl(index))\n      : [];\n\n    return pivots.length\n      ? this.mergePivots(pivots, pivotConfig.joinDateRange)\n      : pivotImpl();\n  }\n\n  mergePivots(pivots, joinDateRange) {\n    const minLengthPivot = pivots.reduce(\n      (memo, current) => (memo != null && current.length >= memo.length ? memo : current), null\n    );\n\n    return minLengthPivot.map((_, index) => {\n      const xValues = joinDateRange\n        ? [pivots.map((pivot) => pivot[index] && pivot[index].xValues || []).join(', ')]\n        : minLengthPivot[index].xValues;\n\n      return {\n        xValues,\n        yValuesArray: unnest(pivots.map((pivot) => pivot[index].yValuesArray))\n      };\n    });\n  }\n\n  pivotedRows(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  chartPivot(pivotConfig) {\n    const validate = (value) => {\n      if (this.parseDateMeasures && LocalDateRegex.test(value)) {\n        return new Date(value);\n      } else if (!Number.isNaN(Number.parseFloat(value))) {\n        return Number.parseFloat(value);\n      }\n\n      return value;\n    };\n\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return this.pivot(pivotConfig).map(({ xValues, yValuesArray }) => {\n      const yValuesMap = {};\n\n      yValuesArray\n        .forEach(([yValues, m], i) => {\n          yValuesMap[this.axisValuesString(aliasSeries(yValues, i, pivotConfig, duplicateMeasures), ',')] = m && validate(m);\n        });\n\n      return ({\n        x: this.axisValuesString(xValues, ','),\n        xValues,\n        ...yValuesMap\n      });\n    });\n  }\n\n  tablePivot(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const isMeasuresPresent = normalizedPivotConfig.x.concat(normalizedPivotConfig.y).includes('measures');\n\n    return this.pivot(normalizedPivotConfig).map(({ xValues, yValuesArray }) => fromPairs(\n      normalizedPivotConfig.x\n        .map((key, index) => [key, xValues[index]])\n        .concat(\n          isMeasuresPresent ? yValuesArray.map(([yValues, measure]) => [\n            yValues.length ? yValues.join() : 'value',\n            measure\n          ]) : []\n        )\n    ));\n  }\n\n  tableColumns(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const annotations = pipe(\n      pluck('annotation'),\n      reduce(mergeDeepLeft(), {})\n    )(this.loadResponses);\n    const flatMeta = Object.values(annotations).reduce((a, b) => ({ ...a, ...b }), {});\n    const schema = {};\n\n    const extractFields = (key) => {\n      const { title, shortTitle, type, format, meta } = flatMeta[key] || {};\n\n      return {\n        key,\n        title,\n        shortTitle,\n        type,\n        format,\n        meta\n      };\n    };\n\n    const pivot = this.pivot(normalizedPivotConfig);\n\n    (pivot[0] && pivot[0].yValuesArray || []).forEach(([yValues]) => {\n      if (yValues.length > 0) {\n        let currentItem = schema;\n\n        yValues.forEach((value, index) => {\n          currentItem[`_${value}`] = {\n            key: value,\n            memberId: normalizedPivotConfig.y[index] === 'measures'\n              ? value\n              : normalizedPivotConfig.y[index],\n            children: (currentItem[`_${value}`] && currentItem[`_${value}`].children) || {}\n          };\n\n          currentItem = currentItem[`_${value}`].children;\n        });\n      }\n    });\n\n    const toColumns = (item = {}, path = []) => {\n      if (Object.keys(item).length === 0) {\n        return [];\n      }\n\n      return Object.values(item).map(({ key, ...currentItem }) => {\n        const children = toColumns(currentItem.children, [\n          ...path,\n          key\n        ]);\n\n        const { title, shortTitle, ...fields } = extractFields(currentItem.memberId);\n\n        const dimensionValue = key !== currentItem.memberId || title == null ? key : '';\n\n        if (!children.length) {\n          return {\n            ...fields,\n            key,\n            dataIndex: [...path, key].join(),\n            title: [title, dimensionValue].join(' ').trim(),\n            shortTitle: dimensionValue || shortTitle,\n          };\n        }\n\n        return {\n          ...fields,\n          key,\n          title: [title, dimensionValue].join(' ').trim(),\n          shortTitle: dimensionValue || shortTitle,\n          children,\n        };\n      });\n    };\n\n    let otherColumns = [];\n\n    if (!pivot.length && normalizedPivotConfig.y.includes('measures')) {\n      otherColumns = (this.loadResponses[0].query.measures || []).map(\n        (key) => ({ ...extractFields(key), dataIndex: key })\n      );\n    }\n\n    // Syntatic column to display the measure value\n    if (!normalizedPivotConfig.y.length && normalizedPivotConfig.x.includes('measures')) {\n      otherColumns.push({\n        key: 'value',\n        dataIndex: 'value',\n        title: 'Value',\n        shortTitle: 'Value',\n        type: 'string',\n      });\n    }\n\n    return normalizedPivotConfig.x\n      .map((key) => {\n        if (key === 'measures') {\n          return {\n            key: 'measures',\n            dataIndex: 'measures',\n            title: 'Measures',\n            shortTitle: 'Measures',\n            type: 'string',\n          };\n        }\n\n        return ({ ...extractFields(key), dataIndex: key });\n      })\n      .concat(toColumns(schema))\n      .concat(otherColumns);\n  }\n\n  totalRow(pivotConfig) {\n    return this.chartPivot(pivotConfig)[0];\n  }\n\n  categories(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  seriesNames(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const measures = pipe(\n      pluck('annotation'),\n      pluck('measures'),\n      mergeAll\n    )(this.loadResponses);\n\n    const seriesNames = unnest(this.loadResponses.map((_, index) => pipe(\n      map(this.axisValues(pivotConfig.y, index)),\n      unnest,\n      uniq\n    )(\n      this.timeDimensionBackwardCompatibleData(index)\n    )));\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return seriesNames.map((axisValues, i) => {\n      const aliasedAxis = aliasSeries(axisValues, i, pivotConfig, duplicateMeasures);\n      return {\n        title: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].title\n            ) :\n            aliasedAxis, ', '\n        ),\n        shortTitle: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].shortTitle\n            ) :\n            aliasedAxis, ', '\n        ),\n        key: this.axisValuesString(aliasedAxis, ','),\n        yValues: axisValues\n      };\n    });\n  }\n\n  query() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].query;\n  }\n\n  pivotQuery() {\n    return this.loadResponse.pivotQuery || null;\n  }\n\n  totalRows() {\n    return this.loadResponses[0].total;\n  }\n\n  rawData() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].data;\n  }\n\n  annotation() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].annotation;\n  }\n\n  timeDimensionBackwardCompatibleData(resultIndex) {\n    if (resultIndex === undefined) {\n      throw new Error('resultIndex is required');\n    }\n\n    if (!this.backwardCompatibleData[resultIndex]) {\n      const { data, query } = this.loadResponses[resultIndex];\n      const timeDimensions = (query.timeDimensions || []).filter(td => Boolean(td.granularity));\n\n      this.backwardCompatibleData[resultIndex] = data.map(row => (\n        {\n          ...row,\n          ...(\n            fromPairs(Object.keys(row)\n              .filter(\n                field => timeDimensions.find(d => d.dimension === field) &&\n                  !row[ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field))]\n              ).map(field => (\n                [ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field)), row[field]]\n              )))\n          )\n        }\n      ));\n    }\n\n    return this.backwardCompatibleData[resultIndex];\n  }\n\n  decompose() {\n    return this.loadResponses.map((result) => new ResultSet({\n      queryType: QUERY_TYPE.REGULAR_QUERY,\n      pivotQuery: {\n        ...result.query,\n        queryType: QUERY_TYPE.REGULAR_QUERY,\n      },\n      results: [result]\n    }, this.options));\n  }\n\n  serialize() {\n    return {\n      loadResponse: clone(this.loadResponse)\n    };\n  }\n}\n\nexport default ResultSet;\n","export default class SqlQuery {\n  constructor(sqlQuery) {\n    this.sqlQuery = sqlQuery;\n  }\n\n  rawQuery() {\n    return this.sqlQuery.sql;\n  }\n\n  sql() {\n    return this.rawQuery().sql[0];\n  }\n}\n","/**\n * @module @cubejs-client/core\n */\n\nimport { unnest, fromPairs } from 'ramda';\n\nconst memberMap = (memberArray) => fromPairs(memberArray.map((m) => [m.name, m]));\n\nconst operators = {\n  string: [\n    { name: 'contains', title: 'contains' },\n    { name: 'notContains', title: 'does not contain' },\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'startsWith', title: 'starts with' },\n    { name: 'notStartsWith', title: 'does not start with' },\n    { name: 'endsWith', title: 'ends with' },\n    { name: 'notEndsWith', title: 'does not end with' },\n  ],\n  number: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'gt', title: '>' },\n    { name: 'gte', title: '>=' },\n    { name: 'lt', title: '<' },\n    { name: 'lte', title: '<=' },\n  ],\n  time: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'inDateRange', title: 'in date range' },\n    { name: 'notInDateRange', title: 'not in date range' },\n    { name: 'afterDate', title: 'after date' },\n    { name: 'afterOrOnDate', title: 'after or on date' },\n    { name: 'beforeDate', title: 'before date' },\n    { name: 'beforeOrOnDate', title: 'before or on date' },\n  ],\n};\n\n/**\n * Contains information about available cubes and it's members.\n */\nclass Meta {\n  constructor(metaResponse) {\n    this.meta = metaResponse;\n    const { cubes } = this.meta;\n    this.cubes = cubes;\n    this.cubesMap = fromPairs(\n      cubes.map((c) => [\n        c.name,\n        {\n          measures: memberMap(c.measures),\n          dimensions: memberMap(c.dimensions),\n          segments: memberMap(c.segments),\n        },\n      ])\n    );\n  }\n\n  membersForQuery(query, memberType) {\n    return unnest(this.cubes.map((c) => c[memberType])).sort((a, b) => (a.title > b.title ? 1 : -1));\n  }\n\n  membersGroupedByCube() {\n    const memberKeys = ['measures', 'dimensions', 'segments', 'timeDimensions'];\n\n    return this.cubes.reduce(\n      (memo, cube) => {\n        memberKeys.forEach((key) => {\n          let members = cube[key];\n\n          if (key === 'timeDimensions') {\n            members = cube.dimensions.filter((m) => m.type === 'time');\n          }\n\n          memo[key] = [\n            ...memo[key],\n            {\n              cubeName: cube.name,\n              cubeTitle: cube.title,\n              type: cube.type,\n              public: cube.public,\n              members\n            },\n          ];\n        });\n\n        return memo;\n      },\n      {\n        measures: [],\n        dimensions: [],\n        segments: [],\n        timeDimensions: [],\n      }\n    );\n  }\n\n  resolveMember(memberName, memberType) {\n    const [cube] = memberName.split('.');\n\n    if (!this.cubesMap[cube]) {\n      return { title: memberName, error: `Cube not found ${cube} for path '${memberName}'` };\n    }\n\n    const memberTypes = Array.isArray(memberType) ? memberType : [memberType];\n    const member = memberTypes\n      .map((type) => this.cubesMap[cube][type] && this.cubesMap[cube][type][memberName])\n      .find((m) => m);\n\n    if (!member) {\n      return {\n        title: memberName,\n        error: `Path not found '${memberName}'`,\n      };\n    }\n\n    return member;\n  }\n\n  defaultTimeDimensionNameFor(memberName) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return null;\n    }\n    return Object.keys(this.cubesMap[cube].dimensions || {}).find(\n      (d) => this.cubesMap[cube].dimensions[d].type === 'time'\n    );\n  }\n\n  filterOperatorsForMember(memberName, memberType) {\n    const member = this.resolveMember(memberName, memberType);\n\n    return operators[member.type] || operators.string;\n  }\n}\n\nexport default Meta;\n","export default class ProgressResult {\n  constructor(progressResponse) {\n    this.progressResponse = progressResponse;\n  }\n\n  stage() {\n    return this.progressResponse.stage;\n  }\n\n  timeElapsed() {\n    return this.progressResponse.timeElapsed;\n  }\n}\n","import fetch from 'cross-fetch';\nimport 'url-search-params-polyfill';\n\nclass HttpTransport {\n  constructor({ authorization, apiUrl, method, headers = {}, credentials }) {\n    this.authorization = authorization;\n    this.apiUrl = apiUrl;\n    this.method = method;\n    this.headers = headers;\n    this.credentials = credentials;\n  }\n\n  request(method, { baseRequestId, ...params }) {\n    let spanCounter = 1;\n    const searchParams = new URLSearchParams(\n      params && Object.keys(params)\n        .map(k => ({ [k]: typeof params[k] === 'object' ? JSON.stringify(params[k]) : params[k] }))\n        .reduce((a, b) => ({ ...a, ...b }), {})\n    );\n\n    let url = `${this.apiUrl}/${method}${searchParams.toString().length ? `?${searchParams}` : ''}`;\n\n    const requestMethod = this.method || (url.length < 2000 ? 'GET' : 'POST');\n    if (requestMethod === 'POST') {\n      url = `${this.apiUrl}/${method}`;\n      this.headers['Content-Type'] = 'application/json';\n    }\n\n    // Currently, all methods make GET requests. If a method makes a request with a body payload,\n    // remember to add {'Content-Type': 'application/json'} to the header.\n    const runRequest = () => fetch(url, {\n      method: requestMethod,\n      headers: {\n        Authorization: this.authorization,\n        'x-request-id': baseRequestId && `${baseRequestId}-span-${spanCounter++}`,\n        ...this.headers\n      },\n      credentials: this.credentials,\n      body: requestMethod === 'POST' ? JSON.stringify(params) : null\n    });\n\n    return {\n      /* eslint no-unsafe-finally: off */\n      async subscribe(callback) {\n        let result = {\n          error: 'network Error' // add default error message\n        };\n        try {\n          result = await runRequest();\n        } finally {\n          return callback(result, () => this.subscribe(callback));\n        }\n      }\n    };\n  }\n}\n\nexport default HttpTransport;\n","export default class RequestError extends Error {\n  constructor(message, response, status) {\n    super(message);\n    this.response = response;\n    this.status = status;\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport ResultSet from './ResultSet';\nimport SqlQuery from './SqlQuery';\nimport Meta from './Meta';\nimport ProgressResult from './ProgressResult';\nimport HttpTransport from './HttpTransport';\nimport RequestError from './RequestError';\n\nlet mutexCounter = 0;\n\nconst MUTEX_ERROR = 'Mutex has been changed';\n\n/**\n * Query result dataset formats enum.\n */\nconst ResultType = {\n  DEFAULT: 'default',\n  COMPACT: 'compact'\n};\n\nfunction mutexPromise(promise) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      resolve(await promise);\n    } catch (error) {\n      if (error !== MUTEX_ERROR) {\n        reject(error);\n      }\n    }\n  });\n}\n\nclass CubeApi {\n  constructor(apiToken, options) {\n    if (apiToken !== null && !Array.isArray(apiToken) && typeof apiToken === 'object') {\n      options = apiToken;\n      apiToken = undefined;\n    }\n    options = options || {};\n\n    if (!options.transport && !options.apiUrl) {\n      throw new Error('The `apiUrl` option is required');\n    }\n\n    this.apiToken = apiToken;\n    this.apiUrl = options.apiUrl;\n    this.method = options.method;\n    this.headers = options.headers || {};\n    this.credentials = options.credentials;\n    this.transport = options.transport || new HttpTransport({\n      authorization: typeof apiToken === 'function' ? undefined : apiToken,\n      apiUrl: this.apiUrl,\n      method: this.method,\n      headers: this.headers,\n      credentials: this.credentials\n    });\n    this.pollInterval = options.pollInterval || 5;\n    this.parseDateMeasures = options.parseDateMeasures;\n    this.castNumerics = typeof options.castNumerics === 'boolean' ? options.castNumerics : false;\n\n    this.updateAuthorizationPromise = null;\n  }\n\n  request(method, params) {\n    return this.transport.request(method, {\n      baseRequestId: uuidv4(),\n      ...params\n    });\n  }\n\n  loadMethod(request, toResult, options, callback) {\n    const mutexValue = ++mutexCounter;\n    if (typeof options === 'function' && !callback) {\n      callback = options;\n      options = undefined;\n    }\n\n    options = options || {};\n\n    const mutexKey = options.mutexKey || 'default';\n    if (options.mutexObj) {\n      options.mutexObj[mutexKey] = mutexValue;\n    }\n\n    const requestPromise = this\n      .updateTransportAuthorization()\n      .then(() => request());\n\n    let skipAuthorizationUpdate = true;\n    let unsubscribed = false;\n\n    const checkMutex = async () => {\n      const requestInstance = await requestPromise;\n\n      if (\n        options.mutexObj &&\n        options.mutexObj[mutexKey] !== mutexValue\n      ) {\n        unsubscribed = true;\n        if (requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        throw MUTEX_ERROR;\n      }\n    };\n\n    const loadImpl = async (response, next) => {\n      const requestInstance = await requestPromise;\n\n      const subscribeNext = async () => {\n        if (options.subscribe && !unsubscribed) {\n          if (requestInstance.unsubscribe) {\n            return next();\n          } else {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n            return next();\n          }\n        }\n        return null;\n      };\n\n      const continueWait = async (wait) => {\n        if (!unsubscribed) {\n          if (wait) {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n          }\n          return next();\n        }\n        return null;\n      };\n\n      if (options.subscribe && !skipAuthorizationUpdate) {\n        await this.updateTransportAuthorization();\n      }\n\n      skipAuthorizationUpdate = false;\n\n      if (response.status === 502) {\n        await checkMutex();\n        return continueWait(true);\n      }\n\n      let body = {};\n      let text = '';\n      try {\n        text = await response.text();\n        body = JSON.parse(text);\n      } catch (_) {\n        body.error = text;\n      }\n\n      if (body.error === 'Continue wait') {\n        await checkMutex();\n        if (options.progressCallback) {\n          options.progressCallback(new ProgressResult(body));\n        }\n        return continueWait();\n      }\n\n      if (response.status !== 200) {\n        await checkMutex();\n        if (!options.subscribe && requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n\n        const error = new RequestError(body.error, body, response.status); // TODO error class\n        if (callback) {\n          callback(error);\n        } else {\n          throw error;\n        }\n\n        return subscribeNext();\n      }\n      await checkMutex();\n      if (!options.subscribe && requestInstance.unsubscribe) {\n        await requestInstance.unsubscribe();\n      }\n      const result = toResult(body);\n      if (callback) {\n        callback(null, result);\n      } else {\n        return result;\n      }\n\n      return subscribeNext();\n    };\n\n    const promise = requestPromise.then(requestInstance => mutexPromise(requestInstance.subscribe(loadImpl)));\n\n    if (callback) {\n      return {\n        unsubscribe: async () => {\n          const requestInstance = await requestPromise;\n\n          unsubscribed = true;\n          if (requestInstance.unsubscribe) {\n            return requestInstance.unsubscribe();\n          }\n          return null;\n        }\n      };\n    } else {\n      return promise;\n    }\n  }\n\n  async updateTransportAuthorization() {\n    if (this.updateAuthorizationPromise) {\n      await this.updateAuthorizationPromise;\n      return;\n    }\n\n    if (typeof this.apiToken === 'function') {\n      this.updateAuthorizationPromise = new Promise(async (resolve, reject) => {\n        try {\n          const token = await this.apiToken();\n          if (this.transport.authorization !== token) {\n            this.transport.authorization = token;\n          }\n          resolve();\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.updateAuthorizationPromise = null;\n        }\n      });\n\n      await this.updateAuthorizationPromise;\n    }\n  }\n\n  /**\n   * Add system properties to a query object.\n   * @param {Query} query\n   * @param {string} responseFormat\n   * @returns {void}\n   * @private\n   */\n  patchQueryInternal(query, responseFormat) {\n    if (\n      responseFormat === ResultType.COMPACT &&\n      query.responseFormat !== ResultType.COMPACT\n    ) {\n      return {\n        ...query,\n        responseFormat: ResultType.COMPACT,\n      };\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * Process result fetched from the gateway#load method according\n   * to the network protocol.\n   * @param {*} response\n   * @returns ResultSet\n   * @private\n   */\n  loadResponseInternal(response, options = {}) {\n    if (\n      response.results.length\n    ) {\n      if (options.castNumerics) {\n        response.results.forEach((result) => {\n          const numericMembers = Object.entries({\n            ...result.annotation.measures,\n            ...result.annotation.dimensions,\n          }).map(([k, v]) => {\n            if (v.type === 'number') {\n              return k;\n            }\n            \n            return undefined;\n          }).filter(Boolean);\n          \n          result.data = result.data.map((row) => {\n            numericMembers.forEach((key) => {\n              if (row[key] != null) {\n                row[key] = Number(row[key]);\n              }\n            });\n            \n            return row;\n          });\n        });\n      }\n      \n      if (response.results[0].query.responseFormat &&\n        response.results[0].query.responseFormat === ResultType.COMPACT) {\n        response.results.forEach((result, j) => {\n          const data = [];\n          result.data.dataset.forEach((r) => {\n            const row = {};\n            result.data.members.forEach((m, i) => {\n              row[m] = r[i];\n            });\n            data.push(row);\n          });\n          response.results[j].data = data;\n        });\n      }\n    }\n    \n    return new ResultSet(response, {\n      parseDateMeasures: this.parseDateMeasures\n    });\n  }\n\n  load(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    options = {\n      castNumerics: this.castNumerics,\n      ...options\n    };\n\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('load', {\n        query,\n        queryType: 'multi',\n      }),\n      (response) => this.loadResponseInternal(response, options),\n      options,\n      callback\n    );\n  }\n\n  subscribe(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    options = {\n      castNumerics: this.castNumerics,\n      ...options\n    };\n\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('subscribe', {\n        query,\n        queryType: 'multi',\n      }),\n      (response) => this.loadResponseInternal(response, options),\n      { ...options, subscribe: true },\n      callback\n    );\n  }\n\n  sql(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('sql', { query }),\n      (response) => (Array.isArray(response) ? response.map((body) => new SqlQuery(body)) : new SqlQuery(response)),\n      options,\n      callback\n    );\n  }\n\n  meta(options, callback) {\n    return this.loadMethod(\n      () => this.request('meta'),\n      (body) => new Meta(body),\n      options,\n      callback\n    );\n  }\n\n  dryRun(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('dry-run', { query }),\n      (response) => response,\n      options,\n      callback\n    );\n  }\n}\n\nexport default (apiToken, options) => new CubeApi(apiToken, options);\n\nexport { CubeApi, HttpTransport, ResultSet, RequestError, Meta };\nexport * from './utils';\n"],"names":["DEFAULT_GRANULARITY","GRANULARITIES","name","undefined","title","removeEmptyQueryFields","_query","query","fromPairs","toPairs","map","_ref","_ref2","_slicedToArray","key","value","includes","Array","isArray","length","Object","keys","filter","Boolean","validateQuery","_objectSpread","filters","f","operator","timeDimensions","td","dateRange","granularity","areQueriesEqual","query1","arguments","query2","equals","entries","order","defaultOrder","find","d","_defineProperty","dimension","measures","dimensions","defaultHeuristics","newState","oldQuery","options","_clone","clone","props","_objectWithoutProperties","_excluded","meta","sessionGranularity","state","newQuery","_ref6","_ref7","defaultTimeDimension","defaultTimeDimensionNameFor","pivotConfig","shouldApplyHeuristicOrder","chartType","newChartType","_oldQuery$timeDimensi","_oldQuery$timeDimensi2","isQueryPresent","every","q","movePivotItem","sourceIndex","destinationIndex","sourceAxis","destinationAxis","nextPivotConfig","x","_toConsumableArray","y","id","lastIndex","splice","moveItemInArray","list","result","_result$splice","_result$splice2","removed","flattenFilters","reduce","memo","or","and","concat","getQueryMembers","members","Set","forEach","member","add","getOrderMembersFromOrder","orderMembers","ids","indexedOrderMembers","indexBy","prop","nextOrderMembers","_ref8","_ref9","memberId","currentOrder","push","has","aliasSeries","values","index","duplicateMeasures","nonNullValues","dayjs","extend","quarterOfYear","internalDayjs","apply","locale","en","weekStart","TIME_SERIES","day","range","by","format","month","snapTo","year","hour","minute","second","week","startOf","quarter","DateRegex","LocalDateRegex","groupByToPairs","keyFn","acc","Map","data","row","set","get","from","unnest","arr","res","subArr","element","dayRange","to","results","start","end","isBefore","isSame","endOf","QUERY_TYPE","REGULAR_QUERY","COMPARE_DATE_RANGE_QUERY","BLENDING_QUERY","ResultSet","loadResponse","_classCallCheck","queryType","loadResponses","pivotQuery","Error","parseDateMeasures","backwardCompatibleData","_createClass","drillDown","drillDownLocator","_drillDownLocator$xVa","xValues","_drillDownLocator$yVa","yValues","normalizedPivotConfig","normalizePivotConfig","currentIndex","_this$query","_this$query$filters","parentFilters","_this$query$segments","segments","annotation","_ref3","_ref4","measureName","_Object$keys","_Object$keys2","drillMembers","_ref5","_member$split","split","_member$split2","cubeName","originalTimeDimension","_originalTimeDimensio","originalStart","originalEnd","join","dt","toString","drillMembersGrouped","timezone","series","_this","seriesNames","shortTitle","chartPivot","_ref10","obj","axisValues","axis","resultIndex","measure","axisValuesString","delimiter","formatValue","v","getNormalizedPivotConfig","timeSeries","timeDimension","timeDimensionMember","dates","pipe","timeDimensionBackwardCompatibleData","minBy","toDate","maxBy","padToDay","match","_dateRange","_dateRange2","pivot","_this2","pivotImpl","groupByXAxis","_ref11","measureValue","fillMissingDates","rows","byXValues","groupBy","_ref12","xGrouped","yValuesMap","_ref13","_ref14","_ref15","allYValues","measureOnX","_ref16","_ref17","yGrouped","_ref18","yValuesArray","measureFromAxis","pivots","_","mergePivots","joinDateRange","minLengthPivot","current","pivotedRows","_this3","validate","test","Date","Number","isNaN","parseFloat","allMeasures","flatten","_ref19","e","i","a","indexOf","m","_ref20","_ref21","_ref22","tablePivot","isMeasuresPresent","_ref23","_ref24","_ref25","tableColumns","annotations","pluck","mergeDeepLeft","flatMeta","b","schema","extractFields","_ref26","type","_ref27","_ref28","currentItem","children","toColumns","item","path","_ref29","_excluded2","_extractFields","fields","_excluded3","dimensionValue","dataIndex","trim","otherColumns","totalRow","categories","_this4","mergeAll","uniq","_ref30","aliasedAxis","dropLast","totalRows","total","rawData","_this$loadResponses$r","field","decompose","_this5","serialize","deserialize","defaultPivotConfig","_query$measures","_query$dimensions","substituteTimeDimensionMembers","subDim","allIncludedDimensions","allDimensions","dimensionFilter","unshift","SqlQuery","sqlQuery","rawQuery","sql","memberMap","memberArray","operators","string","number","time","Meta","metaResponse","cubes","cubesMap","c","membersForQuery","memberType","sort","membersGroupedByCube","memberKeys","cube","cubeTitle","resolveMember","memberName","_memberName$split","_memberName$split2","error","memberTypes","_memberName$split3","_memberName$split4","filterOperatorsForMember","ProgressResult","progressResponse","stage","timeElapsed","HttpTransport","authorization","apiUrl","method","_ref$headers","headers","credentials","request","baseRequestId","params","spanCounter","searchParams","URLSearchParams","k","_typeof","JSON","stringify","url","requestMethod","runRequest","fetch","Authorization","body","subscribe","callback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sent","abrupt","stop","RequestError","_Error","_inherits","_super","_createSuper","message","response","status","call","_wrapNativeSuper","mutexCounter","MUTEX_ERROR","ResultType","DEFAULT","COMPACT","mutexPromise","promise","Promise","resolve","reject","t0","t1","t2","_x","_x2","CubeApi","apiToken","transport","pollInterval","castNumerics","updateAuthorizationPromise","uuidv4","loadMethod","toResult","mutexValue","mutexKey","mutexObj","requestPromise","updateTransportAuthorization","then","skipAuthorizationUpdate","unsubscribed","checkMutex","_callee2","requestInstance","_callee2$","_context2","unsubscribe","loadImpl","_callee5","subscribeNext","continueWait","text","_callee5$","_context5","_callee3","_callee3$","_context3","setTimeout","_callee4","wait","_callee4$","_context4","_x5","parse","progressCallback","_x3","_x4","_unsubscribe","_callee6","_callee6$","_context6","_updateTransportAuthorization","_callee8","_callee8$","_context8","_callee7","token","_callee7$","_context7","finish","_x6","_x7","patchQueryInternal","responseFormat","loadResponseInternal","numericMembers","j","dataset","r","load","_this6","dryRun","_this7"],"mappings":"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"}